vamp.pulse {

  hi-message = "Hi, I'm Vamp! How are you?"

  rest-api {
    interface = 0.0.0.0
    port = 8083
    host = "localhost"
    response-timeout = 10 # seconds
  }

  elasticsearch {

    type = "embedded" # "remote" or "embedded"

    response-timeout = 10 # seconds

    tcp-port = 9300
    host = "localhost"
    cluster-name = "elasticsearch"
    rest-api-url = "http://localhost:9200"

    embedded.data-directory = "target/elasticsearch"

    index {
      name-prefix = "vamp"
      time-format.event = "YYYY-MM-dd"
    }
  }

  event-stream {
    driver = "sse" # "sse", "kafka" or "none"

    sse {

      url = "http://localhost:10001/v1/stats/stream"

      timeout {
        http.connect = 2000
        sse.connection.checkup = 3000
      }
    }

    kafka {
      url = ""
      topic = "metric"
      group = "vamp-pulse"
      partitions = "1"
    }
  }
}

kafka.consumer {
  zookeeper.connection.timeout.ms = "10000"
  auto.commit.enable = "false"
  zookeeper.session.timeout.ms = "1000"
  zookeeper.sync.time.ms = "1000"
  consumer.timeout.ms = "400"
}

akka {

  loglevel = "INFO"
  log-dead-letters = on
  log-config-on-start = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  actor.default-mailbox.mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"

  default-dispatcher.fork-join-executor.pool-size-max = 32
  jvm-exit-on-fatal-error = false
}

spray.can {

  server {
    server-header = ""
    ssl-encryption = off
    pipelining-limit = 1
    idle-timeout = 60 s
    request-timeout = 10 s
    verbose-error-messages = off
    automatic-back-pressure-handling = on
    back-pressure {
      noack-rate = 10
      reading-low-watermark = infinite
    }
    ssl-tracing = off
  }
}
